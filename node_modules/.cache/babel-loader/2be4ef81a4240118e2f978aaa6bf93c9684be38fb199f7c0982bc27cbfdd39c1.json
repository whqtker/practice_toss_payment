{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chosh\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\Computer Study\\\\tosspayment\\\\react-java\\\\src\\\\Checkout.jsx\",\n  _s = $RefreshSig$();\nimport { loadTossPayments, ANONYMOUS } from \"@tosspayments/tosspayments-sdk\";\nimport { useEffect, useState } from \"react\";\n\n// TODO: clientKey는 개발자센터의 결제위젯 연동 키 > 클라이언트 키로 바꾸세요.\n// TODO: 구매자의 고유 아이디를 불러와서 customerKey로 설정하세요. 이메일・전화번호와 같이 유추가 가능한 값은 안전하지 않습니다.\n// @docs https://docs.tosspayments.com/sdk/v2/js#토스페이먼츠-초기화\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientKey = \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\";\nconst customerKey = generateRandomString();\nexport function CheckoutPage() {\n  _s();\n  const [amount, setAmount] = useState({\n    currency: \"KRW\",\n    value: 50000\n  });\n  const [ready, setReady] = useState(false);\n  const [widgets, setWidgets] = useState(null);\n  useEffect(() => {\n    async function fetchPaymentWidgets() {\n      try {\n        // ------  SDK 초기화 ------\n        // @docs https://docs.tosspayments.com/sdk/v2/js#토스페이먼츠-초기화\n        const tossPayments = await loadTossPayments(clientKey);\n\n        // 회원 결제\n        // @docs https://docs.tosspayments.com/sdk/v2/js#tosspaymentswidgets\n        const widgets = tossPayments.widgets({\n          customerKey\n        });\n        // 비회원 결제\n        // const widgets = tossPayments.widgets({ customerKey: ANONYMOUS });\n\n        setWidgets(widgets);\n      } catch (error) {\n        console.error(\"Error fetching payment widget:\", error);\n      }\n    }\n    fetchPaymentWidgets();\n  }, [clientKey, customerKey]);\n  useEffect(() => {\n    async function renderPaymentWidgets() {\n      if (widgets == null) {\n        return;\n      }\n\n      // ------  주문서의 결제 금액 설정 ------\n      // TODO: 위젯의 결제금액을 결제하려는 금액으로 초기화하세요.\n      // TODO: renderPaymentMethods, renderAgreement, requestPayment 보다 반드시 선행되어야 합니다.\n      await widgets.setAmount(amount);\n\n      // ------  결제 UI 렌더링 ------\n      // @docs https://docs.tosspayments.com/sdk/v2/js#widgetsrenderpaymentmethods\n      await widgets.renderPaymentMethods({\n        selector: \"#payment-method\",\n        // 렌더링하고 싶은 결제 UI의 variantKey\n        // 결제 수단 및 스타일이 다른 멀티 UI를 직접 만들고 싶다면 계약이 필요해요.\n        // @docs https://docs.tosspayments.com/guides/v2/payment-widget/admin#새로운-결제-ui-추가하기\n        variantKey: \"DEFAULT\"\n      });\n\n      // ------  이용약관 UI 렌더링 ------\n      // @docs https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션\n      await widgets.renderAgreement({\n        selector: \"#agreement\",\n        variantKey: \"AGREEMENT\"\n      });\n      setReady(true);\n    }\n    renderPaymentWidgets();\n  }, [widgets]);\n  const updateAmount = async amount => {\n    setAmount(amount);\n    await widgets.setAmount(amount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"payment-method\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"agreement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingLeft: \"24px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkable typography--p\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"coupon-box\",\n            className: \"checkable__label typography--regular\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"coupon-box\",\n              className: \"checkable__input\",\n              type: \"checkbox\",\n              \"aria-checked\": \"true\",\n              disabled: !ready\n              // ------  주문서의 결제 금액이 변경되었을 경우 결제 금액 업데이트 ------\n              // @docs https://docs.tosspayments.com/sdk/v2/js#widgetssetamount\n              ,\n              onChange: async event => {\n                await updateAmount({\n                  currency: amount.currency,\n                  value: event.target.checked ? amount.value - 5000 : amount.value + 5000\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkable__label-text\",\n              children: \"5,000\\uC6D0 \\uCFE0\\uD3F0 \\uC801\\uC6A9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        style: {\n          marginTop: \"30px\"\n        },\n        disabled: !ready\n        // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------\n        // @docs https://docs.tosspayments.com/sdk/v2/js#widgetsrequestpayment\n        ,\n        onClick: async () => {\n          try {\n            // 결제를 요청하기 전에 orderId, amount를 서버에 저장하세요.\n            // 결제 과정에서 악의적으로 결제 금액이 바뀌는 것을 확인하는 용도입니다.\n            await widgets.requestPayment({\n              orderId: generateRandomString(),\n              orderName: \"토스 티셔츠 외 2건\",\n              successUrl: window.location.origin + \"/success\",\n              failUrl: window.location.origin + \"/fail\",\n              customerEmail: \"customer123@gmail.com\",\n              customerName: \"김토스\",\n              customerMobilePhone: \"01012341234\"\n            });\n          } catch (error) {\n            // 에러 처리하기\n            console.error(error);\n          }\n        },\n        children: \"\\uACB0\\uC81C\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutPage, \"329wX+0gDDhvKmREgg9jU1lmWNA=\");\n_c = CheckoutPage;\nfunction generateRandomString() {\n  return window.btoa(Math.random().toString()).slice(0, 20);\n}\nvar _c;\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"names":["loadTossPayments","ANONYMOUS","useEffect","useState","jsxDEV","_jsxDEV","clientKey","customerKey","generateRandomString","CheckoutPage","_s","amount","setAmount","currency","value","ready","setReady","widgets","setWidgets","fetchPaymentWidgets","tossPayments","error","console","renderPaymentWidgets","renderPaymentMethods","selector","variantKey","renderAgreement","updateAmount","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingLeft","htmlFor","type","disabled","onChange","event","target","checked","marginTop","onClick","requestPayment","orderId","orderName","successUrl","window","location","origin","failUrl","customerEmail","customerName","customerMobilePhone","_c","btoa","Math","random","toString","slice","$RefreshReg$"],"sources":["C:/Users/chosh/OneDrive/바탕 화면/Computer Study/tosspayment/react-java/src/Checkout.jsx"],"sourcesContent":["import { loadTossPayments, ANONYMOUS } from \"@tosspayments/tosspayments-sdk\";\nimport { useEffect, useState } from \"react\";\n\n// TODO: clientKey는 개발자센터의 결제위젯 연동 키 > 클라이언트 키로 바꾸세요.\n// TODO: 구매자의 고유 아이디를 불러와서 customerKey로 설정하세요. 이메일・전화번호와 같이 유추가 가능한 값은 안전하지 않습니다.\n// @docs https://docs.tosspayments.com/sdk/v2/js#토스페이먼츠-초기화\nconst clientKey = \"test_gck_docs_Ovk5rk1EwkEbP0W43n07xlzm\";\nconst customerKey = generateRandomString();\n\nexport function CheckoutPage() {\n  const [amount, setAmount] = useState({\n    currency: \"KRW\",\n    value: 50000,\n  });\n  const [ready, setReady] = useState(false);\n  const [widgets, setWidgets] = useState(null);\n\n  useEffect(() => {\n    async function fetchPaymentWidgets() {\n      try {\n        // ------  SDK 초기화 ------\n        // @docs https://docs.tosspayments.com/sdk/v2/js#토스페이먼츠-초기화\n        const tossPayments = await loadTossPayments(clientKey);\n\n        // 회원 결제\n        // @docs https://docs.tosspayments.com/sdk/v2/js#tosspaymentswidgets\n        const widgets = tossPayments.widgets({\n          customerKey,\n        });\n        // 비회원 결제\n        // const widgets = tossPayments.widgets({ customerKey: ANONYMOUS });\n\n        setWidgets(widgets);\n      } catch (error) {\n        console.error(\"Error fetching payment widget:\", error);\n      }\n    }\n\n    fetchPaymentWidgets();\n  }, [clientKey, customerKey]);\n\n  useEffect(() => {\n    async function renderPaymentWidgets() {\n      if (widgets == null) {\n        return;\n      }\n\n      // ------  주문서의 결제 금액 설정 ------\n      // TODO: 위젯의 결제금액을 결제하려는 금액으로 초기화하세요.\n      // TODO: renderPaymentMethods, renderAgreement, requestPayment 보다 반드시 선행되어야 합니다.\n      await widgets.setAmount(amount);\n\n      // ------  결제 UI 렌더링 ------\n      // @docs https://docs.tosspayments.com/sdk/v2/js#widgetsrenderpaymentmethods\n      await widgets.renderPaymentMethods({\n        selector: \"#payment-method\",\n        // 렌더링하고 싶은 결제 UI의 variantKey\n        // 결제 수단 및 스타일이 다른 멀티 UI를 직접 만들고 싶다면 계약이 필요해요.\n        // @docs https://docs.tosspayments.com/guides/v2/payment-widget/admin#새로운-결제-ui-추가하기\n        variantKey: \"DEFAULT\",\n      });\n\n      // ------  이용약관 UI 렌더링 ------\n      // @docs https://docs.tosspayments.com/reference/widget-sdk#renderagreement선택자-옵션\n      await widgets.renderAgreement({\n        selector: \"#agreement\",\n        variantKey: \"AGREEMENT\",\n      });\n\n      setReady(true);\n    }\n\n    renderPaymentWidgets();\n  }, [widgets]);\n\n  const updateAmount = async (amount) => {\n    setAmount(amount);\n    await widgets.setAmount(amount);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"box_section\">\n        {/* 결제 UI */}\n        <div id=\"payment-method\" />\n        {/* 이용약관 UI */}\n        <div id=\"agreement\" />\n        {/* 쿠폰 체크박스 */}\n        <div style={{ paddingLeft: \"24px\" }}>\n          <div className=\"checkable typography--p\">\n            <label\n              htmlFor=\"coupon-box\"\n              className=\"checkable__label typography--regular\"\n            >\n              <input\n                id=\"coupon-box\"\n                className=\"checkable__input\"\n                type=\"checkbox\"\n                aria-checked=\"true\"\n                disabled={!ready}\n                // ------  주문서의 결제 금액이 변경되었을 경우 결제 금액 업데이트 ------\n                // @docs https://docs.tosspayments.com/sdk/v2/js#widgetssetamount\n                onChange={async (event) => {\n                  await updateAmount({\n                    currency: amount.currency,\n                    value: event.target.checked\n                      ? amount.value - 5000\n                      : amount.value + 5000,\n                  });\n                }}\n              />\n              <span className=\"checkable__label-text\">5,000원 쿠폰 적용</span>\n            </label>\n          </div>\n        </div>\n\n        {/* 결제하기 버튼 */}\n        <button\n          className=\"button\"\n          style={{ marginTop: \"30px\" }}\n          disabled={!ready}\n          // ------ '결제하기' 버튼 누르면 결제창 띄우기 ------\n          // @docs https://docs.tosspayments.com/sdk/v2/js#widgetsrequestpayment\n          onClick={async () => {\n            try {\n              // 결제를 요청하기 전에 orderId, amount를 서버에 저장하세요.\n              // 결제 과정에서 악의적으로 결제 금액이 바뀌는 것을 확인하는 용도입니다.\n              await widgets.requestPayment({\n                orderId: generateRandomString(),\n                orderName: \"토스 티셔츠 외 2건\",\n                successUrl: window.location.origin + \"/success\",\n                failUrl: window.location.origin + \"/fail\",\n                customerEmail: \"customer123@gmail.com\",\n                customerName: \"김토스\",\n                customerMobilePhone: \"01012341234\",\n              });\n            } catch (error) {\n              // 에러 처리하기\n              console.error(error);\n            }\n          }}\n        >\n          결제하기\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction generateRandomString() {\n  return window.btoa(Math.random().toString()).slice(0, 20);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}